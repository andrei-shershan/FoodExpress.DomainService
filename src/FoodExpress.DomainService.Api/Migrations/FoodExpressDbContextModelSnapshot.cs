// <auto-generated />
using System;
using FoodExpress.DomainService.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodExpress.DomainService.Api.Migrations
{
    [DbContext(typeof(FoodExpressDbContext))]
    partial class FoodExpressDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MenuSubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MenuSubcategoryId");

                    b.ToTable("MenuPositions");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuPositionProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MenuPositionProducts");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuSubcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("MenuSubcategories");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime(0)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(0)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuPositionId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuPositionId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.OrderItemDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipeId");

                    b.ToTable("OrderItemDetails");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProductGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductGroupId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductGroups");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuPositionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuPositionId");

                    b.HasIndex("ProductGroupId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuPosition", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.MenuSubcategory", "MenuSubcategory")
                        .WithMany("MenuPositions")
                        .HasForeignKey("MenuSubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuSubcategory");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuPositionProduct", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.Product", "Product")
                        .WithMany("MenuPositionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.Recipe", "Recipe")
                        .WithMany("MenuPositionProducts")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuSubcategory", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.MenuCategory", "MenuCategory")
                        .WithMany("MenuSubcategories")
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.OrderItem", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.MenuPosition", "MenuPosition")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPosition");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.OrderItemDetails", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.OrderItem", "OrderItem")
                        .WithMany("OrderItemDetails")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.Product", "Product")
                        .WithMany("OrderItemDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.Recipe", "Recipe")
                        .WithMany("OrderItemDetails")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Product", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Recipe", b =>
                {
                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.MenuPosition", "MenuPosition")
                        .WithMany("Recipes")
                        .HasForeignKey("MenuPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodExpress.DomainService.Domain.DomainModels.ProductGroup", "ProductGroup")
                        .WithMany("Recipes")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPosition");

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuCategory", b =>
                {
                    b.Navigation("MenuSubcategories");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuPosition", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.MenuSubcategory", b =>
                {
                    b.Navigation("MenuPositions");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.OrderItem", b =>
                {
                    b.Navigation("OrderItemDetails");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Product", b =>
                {
                    b.Navigation("MenuPositionProducts");

                    b.Navigation("OrderItemDetails");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.ProductGroup", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FoodExpress.DomainService.Domain.DomainModels.Recipe", b =>
                {
                    b.Navigation("MenuPositionProducts");

                    b.Navigation("OrderItemDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
